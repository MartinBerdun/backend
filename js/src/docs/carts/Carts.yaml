paths :  #en este archivo se manejan las siguientes rutas (swagger lo hace)
  /api/carts/: #aca se especifica la ruta en donde estan los endpoints
    get: #que verbo http se puede usar
      summary: Obtiene todos los carritos #resumen de lo que hace el enpoint
      tags:
        - Carts
      responses:
        "200": 
          description: Los carritos fueron obtenidos exitosamente desde la base de datos
          content: #arroja como un ejemplo al hacer el endpoint
            application/json:
              schema:
                type: array
                items: 
                  $ref: "#components/schemas/Product" #hace referencia al schema de abajo que esta en components
        "500":
          description: Error en la conexion con la base de datos

    post: #que verbo http se puede usar
      summary: Agrega un carrito de compras
      tags:
        - Carts
      requestBody:
        required: true
        content:
          application/json:
            schema:
             $ref: '#components/requestBodies/productBody'
      responses:
        "200": 
          description: El carrito fue agregado exitosamente
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: "#components/schemas/Product" #hace referencia al schema de abajo que esta en components
        "500":
          description: Error en la conexion con la base de datos

  /api/carts/{cid}:
    get:
      summary: Obtiene un solo carrito a partir de su id
      tags:
        - Carts
      parameters:
      - name : cid
        in: path
        required: true
        description: Id del carrito que se desea solicitar
        schema:
          $type: string
      responses:
        "200":
          description: Carrito encontrado
          content:
            application/json:
              $ref: '#components/schemas/Product'
        "404":
          description: Error en la conexion con la base de datos

    put:
      summary: Actaliza un carrito a partir de su id
      tags:
        - Carts
      parameters:
        - name : cid
          in: path
          required: true
          description: Id del carrito que se desea actualizar
          schema:
            $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
             $ref: '#components/requestBodies/productBody'
      responses:
        "200":
          description: Carrito actualizado
          content:
            application/json:
              $ref: '#components/schemas/Product'
        "401":
          description: No se puede actualizar el carrito
    
    delete:
      summary: Elimina un solo carrito a partir de su id
      tags:
        - Carts
      parameters:
      - name : cid
        in: path
        required: true
        description: Id del carrito que se desea eliminar
        schema:
          $type: string
      responses:
        "200":
          description: Carrito eliminado
          content:
            application/json:
              $ref: '#components/schemas/Product'
        "404":
          description: No se ha podido eliminar el carrito

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: string
          description: ID del carrito
        products:
          type: array
          items:
            $ref: '#/components/schemas/CartProduct'
          description: Lista de productos en el carrito
        

    CartProduct:
      type: object
      properties:
        _id:
          type: string
          description: ID del producto en el carrito
        product:
          $ref: '#/components/schemas/Product'
          description: Detalles del producto
        quantity:
          type: integer
          description: Cantidad del producto en el carrito