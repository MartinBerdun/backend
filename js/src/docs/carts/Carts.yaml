paths :  #en este archivo se manejan las siguientes rutas (swagger lo hace)
  /api/carts/: #aca se especifica la ruta en donde estan los endpoints
    get: #que verbo http se puede usar
      summary: Obtiene todos los carritos #resumen de lo que hace el enpoint
      tags:
        - Carts
      responses:
        "200": 
          description: Los carritos fueron obtenidos exitosamente desde la base de datos
          content: #arroja como un ejemplo al hacer el endpoint
            application/json:
              schema:
                type: array
                items: 
                  $ref: "#components/schemas/Carts" #hace referencia al schema de abajo que esta en components
        "500":
          description: Error en la conexion con la base de datos

    post: #que verbo http se puede usar
      summary: Agrega un carrito de compras
      tags:
        - Carts
      responses:
        "200": 
          description: El carrito fue agregado exitosamente
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: "#components/schemas/Cart" #hace referencia al schema de abajo que esta en components
        "401":
          description: No se ha podido crear el carrito

  /api/carts/{cid}:
    get:
      summary: Obtiene un solo carrito a partir de su id
      tags:
        - Carts
      parameters:
      - name : cid
        in: path
        required: true
        description: Id del carrito que se desea solicitar
        schema:
          $type: string
      responses:
        "200":
          description: Carrito encontrado exitosamente
          content:
            application/json:
              $ref: '#components/schemas/Cart'
        "404":
          description: Error al encontrar el carrito por su Id

    put:
      summary: Actaliza un carrito a partir de su id
      tags:
        - Carts
      parameters:
        - name : cid
          in: path
          required: true
          description: Id del carrito que se desea actualizar
          schema:
            $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
             $ref: '#components/requestBodies/productBody'
      responses:
        "200":
          description: Carrito actualizado exitosamente
          content:
            application/json:
              $ref: '#components/schemas/Product'
        "401":
          description: No se puede actualizar el carrito
    
    delete:
      summary: Elimina un solo carrito a partir de su id
      tags:
        - Carts
      parameters:
      - name : cid
        in: path
        required: true
        description: Id del carrito que se desea eliminar
        schema:
          $type: string
      responses:
        "200":
          description: Carrito eliminado
          content:
            application/json:
              $ref: '#components/schemas/Cart'
        "404":
          description: No se ha podido eliminar el carrito
  
  /api/carts/{cid}/product/{pid}:
    post:
      summary: Agrega un producto al carrito
      tags:
        - Carts
      parameters:
      - name : cid
        in: path
        required: true
        description: Id del carrito que se desea eliminar
        schema:
          $type: string
      - name: pid
        in: path
        required: true
        description: Id del producto que se desea agregar
        schema:
          $type: string
      responses:
        '200':
          description: Éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carts'
        "404":
          description: No se ha podido eliminar el carrito
    
    put:
      summary: Actualiza la cantidad en el carrito
      tags:
        - Carts
      parameters:
      - name : cid
        in: path
        required: true
        description: Id del carrito que se desea eliminar
        schema:
          $type: string
      - name: pid
        in: path
        required: true
        description: Id del producto que se desea agregar
        schema:
          $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/CartBodyQuantity"
      responses:
        '200':
          description: Éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Carts'
        "404":
          description: No se ha podido eliminar el carrito

    delete:
      summary: Elimina un producto del carrito
      tags:
        - Carts
      parameters:
      - name : cid
        in: path
        required: true
        description: Id del carrito del que se desea eliminar
        schema:
          $type: string
      - name: pid
        in: path
        required: true
        description: Id del producto que se desea eliminar
        schema:
          $type: string
      responses:
        '200':
          description: Se ha eliminado el producto del carrito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
        "404":
          description: No se ha podido crear el ticket

  /api/carts/{cid}/purchase:
    post:
      summary: Crea un ticket del carrito
      tags:
        - Carts
      parameters:
      - name : cid
        in: path
        required: true
        description: Id del carrito 
        schema:
          $type: string
      responses:
        '200':
          description: Se ha creado el ticket
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        "404":
          description: No se ha podido eliminar el producto del carrito




components:
  schemas:
    Ticket:
      type: object
      properties:
        _id:
          type: string
          description: Id del ticket
        code: 
          type: string
          description: Code del ticket
        purchase_datetime: 
          type: datetime
          description: Date del ticket en que se creo
        ammount:
          type: string
          description: Amount del ticket
        purchaser:
          type: string
          description: Cliente del ticket

    Cart:
      type: object
      properties:
        _id:
          type: string
          description: ID del carrito autogenerado por Mongo
        products:
          type: array
          items: []
          description: Lista de productos en el carrito
    
    Carts:
      type: object
      properties:
        _id:
          type: string
          description: ID del carrito autogenerado por Mongo
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductInCart'
          description: Lista de productos en el carrito
      

    ProductInCart:
      type: object
      properties:
        _id:
          type: string
          description: ID del producto en el carrito
        product:
          $ref: '#/components/schemas/Product'
          description: Detalles del producto
        quantity:
          type: number
          description: Cantidad del producto en el carrito

  requestBodies:
    CartBodyQuantity:
      type: object
      properties:
        quantity:
          type: number
          description: Cantidad del producto en el carrito
      example:
        quantity: 22